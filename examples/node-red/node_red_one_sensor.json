[
    {
        "id": "6c259dd5.72f0d4",
        "type": "subflow",
        "name": "Ring Buffer",
        "info": "# Ring buffer\n## Last in First Out subflow\nThis flow receives a series of msg.payloads and builds a ring bifferwith a specific buffer size. The buffer size is configurabe through subflows enviroment variables.\n\n### Input\nThe `msg.payload`will be added to the ring buffer array, except if `msg.topic == list`\n\nIf `msg.topic == list` the complete buffer will be sent at the secont output.\n\n\n### Output 1\nAlways sends the original message\n\n### Output 2\nAlways return the complete buffer.\n\n### Status\nAlways shows the queue size.\n\n### Enviroment Variables\n`Buffer_Size` defines the size of the queue. If a new item arrives and the queue is full, the oldest item will be removed.",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 40,
                "wires": [
                    {
                        "id": "b4286eb1.847af"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 280,
                "y": 40,
                "wires": [
                    {
                        "id": "6c259dd5.72f0d4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 800,
                "y": 140,
                "wires": [
                    {
                        "id": "6c6b3594.fac22c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Buffer_Size",
                "type": "num",
                "value": "5"
            }
        ],
        "inputLabels": [
            "payload"
        ],
        "outputLabels": [
            "Original message",
            "Buffer"
        ],
        "icon": "font-awesome/fa-circle-o-notch",
        "status": {
            "x": 1020,
            "y": 100,
            "wires": [
                {
                    "id": "36df5ea7.231082",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b4286eb1.847af",
        "type": "switch",
        "z": "6c259dd5.72f0d4",
        "name": "Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "list",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "6c6b3594.fac22c"
            ],
            [
                "afc05e2d.59f36"
            ]
        ]
    },
    {
        "id": "afc05e2d.59f36",
        "type": "function",
        "z": "6c259dd5.72f0d4",
        "name": "put",
        "func": "var queue = flow.get(\"queue\")\n\n\nif (!Array.isArray(queue)){\n    queue = [];\n}else if ( queue.length >= env.get(\"Buffer_Size\") ){\n    queue.pop(1);\n}\n\nqueue.unshift(msg.payload);\n\nflow.set(\"queue\", queue);\nmsg.payload = queue;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "6c6b3594.fac22c"
            ]
        ]
    },
    {
        "id": "6c6b3594.fac22c",
        "type": "change",
        "z": "6c259dd5.72f0d4",
        "name": "list",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "queue",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "36df5ea7.231082"
            ]
        ]
    },
    {
        "id": "36df5ea7.231082",
        "type": "change",
        "z": "6c259dd5.72f0d4",
        "name": "Count",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e013861a.4e5f18",
        "type": "tab",
        "label": "One Sensor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9baad2b5.90e63",
        "type": "http in",
        "z": "e013861a.4e5f18",
        "name": "Sensor Values",
        "url": "/datastream_one",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "b6682244.aec558",
                "61e957d7.c6caa8"
            ]
        ]
    },
    {
        "id": "b6682244.aec558",
        "type": "http response",
        "z": "e013861a.4e5f18",
        "name": "OK",
        "statusCode": "200",
        "headers": {},
        "x": 430,
        "y": 180,
        "wires": []
    },
    {
        "id": "3e0b2457.15b844",
        "type": "ui_chart",
        "z": "e013861a.4e5f18",
        "name": "Sensor Chart",
        "group": "a638335e.c3e058",
        "order": 1,
        "width": 10,
        "height": 4,
        "label": "Dew Point - One Sensor",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "52",
        "removeOlderPoints": "150",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 670,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "61e957d7.c6caa8",
        "type": "function",
        "z": "e013861a.4e5f18",
        "name": "",
        "func": "var val = {\"topic\": \"Dew Point\"};\nvar avg = {\"topic\": \"Mean\"};\nvar min = {\"topic\": \"Lower\"};\nvar max = {\"topic\": \"Upper\"};\n\nvar raw = msg.payload = JSON.parse(msg.payload);\n\nval.payload = raw.value;\navg.payload = msg.payload.hasOwnProperty(\"mean\") ? raw.mean : null;\nmin.payload = msg.payload.hasOwnProperty(\"lower\") ? raw.lower : null;\nmax.payload = msg.payload.hasOwnProperty(\"upper\") ? raw.upper : null;\n\nval.timestamp = raw.timestamp;\navg.timestamp = raw.timestamp;\nmin.timestamp = raw.timestamp;\nmax.timestamp = raw.timestamp;\n\nreturn [val, min, max, avg];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "3e0b2457.15b844"
            ],
            [
                "3e0b2457.15b844"
            ],
            [
                "3e0b2457.15b844"
            ],
            [
                "3e0b2457.15b844"
            ]
        ]
    },
    {
        "id": "2c85087b.89ae6",
        "type": "ui_button",
        "z": "e013861a.4e5f18",
        "name": "",
        "group": "a638335e.c3e058",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Clear Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "3e0b2457.15b844",
                "bd4ae558.cf9ee8"
            ]
        ]
    },
    {
        "id": "f020d41a.fa023",
        "type": "http in",
        "z": "e013861a.4e5f18",
        "name": "Sensor Message",
        "url": "/msgstream_one",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 560,
        "wires": [
            [
                "7d46d2d3.24b304",
                "dcf0da8e.a34cd"
            ]
        ]
    },
    {
        "id": "7d46d2d3.24b304",
        "type": "http response",
        "z": "e013861a.4e5f18",
        "name": "OK",
        "statusCode": "200",
        "headers": {},
        "x": 430,
        "y": 500,
        "wires": []
    },
    {
        "id": "4d0972ba.dc1504",
        "type": "ui_text",
        "z": "e013861a.4e5f18",
        "group": "a638335e.c3e058",
        "order": 2,
        "width": 4,
        "height": 4,
        "name": "Display",
        "label": "<b>Warnings</b>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 900,
        "y": 480,
        "wires": []
    },
    {
        "id": "bd4ae558.cf9ee8",
        "type": "function",
        "z": "e013861a.4e5f18",
        "name": "Empty Message",
        "func": "msg.payload = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 380,
        "wires": [
            [
                "4d0972ba.dc1504"
            ]
        ]
    },
    {
        "id": "df4ae133.614e68",
        "type": "function",
        "z": "e013861a.4e5f18",
        "name": "",
        "func": "msg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 320,
        "wires": [
            [
                "3e0b2457.15b844"
            ]
        ]
    },
    {
        "id": "8210d47c.39d1a8",
        "type": "http response",
        "z": "e013861a.4e5f18",
        "name": "OK",
        "statusCode": "200",
        "headers": {},
        "x": 650,
        "y": 420,
        "wires": []
    },
    {
        "id": "d8226aff.255d18",
        "type": "http in",
        "z": "e013861a.4e5f18",
        "name": "Clear",
        "url": "/clear_one",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "bd4ae558.cf9ee8",
                "df4ae133.614e68",
                "8249599e.60f58"
            ]
        ]
    },
    {
        "id": "8249599e.60f58",
        "type": "template",
        "z": "e013861a.4e5f18",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "OK",
        "output": "str",
        "x": 440,
        "y": 420,
        "wires": [
            [
                "8210d47c.39d1a8"
            ]
        ]
    },
    {
        "id": "dcf0da8e.a34cd",
        "type": "subflow:6c259dd5.72f0d4",
        "z": "e013861a.4e5f18",
        "name": "",
        "env": [
            {
                "name": "Buffer_Size",
                "value": "10",
                "type": "num"
            }
        ],
        "x": 450,
        "y": 580,
        "wires": [
            [],
            [
                "5f565f70.129c4"
            ]
        ]
    },
    {
        "id": "5f565f70.129c4",
        "type": "function",
        "z": "e013861a.4e5f18",
        "name": "",
        "func": "var join = msg.payload.join('\\n');\nmsg.payload = join;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 580,
        "wires": [
            [
                "4d0972ba.dc1504"
            ]
        ]
    },
    {
        "id": "a638335e.c3e058",
        "type": "ui_group",
        "name": "One Sensor",
        "tab": "a35214a9.719bb",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false
    },
    {
        "id": "a35214a9.719bb",
        "type": "ui_tab",
        "name": "STEAM",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    }
]
